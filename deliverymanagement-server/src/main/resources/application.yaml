spring:
  application:
    name: deliverymanagement-server # <--- This is the name it registers with in Eureka
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#  datasource:
#    url: jdbc:postgresql://localhost:5432/driverservice
#    username: root
#    password: 1234
#  jpa:
#    database: POSTGRESQL
#    show-sql: true
#    hibernate:
#      ddl-auto: update
#    database-platform: org.hibernate.dialect.PostgreSQLDialect

  ##  for finding config server
  cloud:
    config:
      discovery:
        enabled: true  # Enable Eureka-based config server lookup
        service-id: config-server # <-- Eureka service name of your config server
  config:
    import: "optional:configserver:"

server:
  port: 8093 # The service runs on this port

#The Gateway will also be registered at the Eureka server
eureka:
  instance:
    hostname: localhost
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG