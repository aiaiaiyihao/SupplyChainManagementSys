spring.application.name=config-server

#Points the Config Server to your remote Git repo that stores configuration files.
spring.cloud.config.server.git.uri=https://github.com/aiaiaiyihao/configure-remote-demo.git

#If enabled, it would point to a local directory
# for testing (hot reloading config works better locally).
# monitor local config file  ?by default, it can react to local file changes but not remote change
# spring.cloud.config.server.git.uri=file://${HOME}/Desktop/source/

#disable the Spring Cloud Config client
#This disables the Config Client (on the Config Server itself), which is good and correct.
# The Config Server doesn't need to fetch config for itself.
spring.cloud.config.enabled=false

# point to main branch
#Sets the default Git branch to main.
# If a client doesn?t specify a branch/label, it uses this one.
spring.cloud.config.server.default-label=main

#Runs the Config Server on port 8099.
server.port=8099

#Exposes all actuator endpoints, including /env, /refresh, /busrefresh, etc.
management.endpoints.web.exposure.include=*


#Eureka
eureka.instance.hostname=localhost

eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
